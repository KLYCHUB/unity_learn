//Rolling, (x, z moving), third person camera follow

using UnityEngine;

public class PlayerMovement : MonoBehaviour
{
    public float speed;
    public float rotationSpeed;
    public float fastSpeedMultiplier = 2f;
    public float rollDuration = 1f;

    private Animator animator;
    private CharacterController characterController;
    private bool isSprinting = false;
    private bool rolling = false;
    private float rollStartTime;

    [SerializeField]
    private float maximumSpeed;

    [SerializeField]
    private Transform cameraTransform;

    void Start()
    {
        animator = GetComponent<Animator>();
        characterController = GetComponent<CharacterController>();
    }

    void Update()
    {
        float horizontalInput = Input.GetAxis("Horizontal");
        float verticalInput = Input.GetAxis("Vertical");

        if (Input.GetKey(KeyCode.LeftShift))
        {
            isSprinting = true;
        }
        else
        {
            isSprinting = false;
        }

        Vector3 movementDirection = new Vector3(horizontalInput, 0, verticalInput);
        float magnitude = Mathf.Clamp01(movementDirection.magnitude) * speed;
        float inputMagnitude = Mathf.Clamp01(movementDirection.magnitude);

        if (isSprinting)
        {
            magnitude *= fastSpeedMultiplier;
        }

        float calculatedSpeed = inputMagnitude * maximumSpeed;
        movementDirection = Quaternion.AngleAxis(cameraTransform.rotation.eulerAngles.y, Vector3.up) * movementDirection;
        movementDirection.Normalize();

        if (Input.GetKeyDown(KeyCode.C) && !rolling && movementDirection != Vector3.zero)
        {
            rolling = true;
            animator.SetTrigger("Roll");
            rollStartTime = Time.time;
        }

        if (rolling)
        {
            if (Time.time - rollStartTime > rollDuration)
            {
                rolling = false;
            }
            else
            {
                Vector3 forwardMovement = transform.forward * magnitude;
                characterController.Move(forwardMovement * Time.deltaTime);
            }
        }

        Vector3 velocity = movementDirection * magnitude;
        characterController.Move(velocity * Time.deltaTime);

        if (movementDirection != Vector3.zero && !rolling)
        {
            animator.SetBool("IsMoving", true);
            Quaternion toRotation = Quaternion.LookRotation(movementDirection, Vector3.up);
            transform.rotation = Quaternion.RotateTowards(transform.rotation, toRotation, rotationSpeed * Time.deltaTime);
        }
        else
        {
            animator.SetBool("IsMoving", false);
        }

        animator.SetBool("IsSprinting", isSprinting);
        animator.SetBool("IsRolling", rolling);
    }

    private void OnApplicationFocus(bool focus)
    {
        if (focus)
        {
            Cursor.lockState = CursorLockMode.Locked;
        }
        else
        {
            Cursor.lockState = CursorLockMode.None;
        }
    }
}
